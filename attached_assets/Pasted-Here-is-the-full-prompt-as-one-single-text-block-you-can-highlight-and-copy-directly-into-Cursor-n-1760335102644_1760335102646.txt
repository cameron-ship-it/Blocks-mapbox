Here is the full prompt as one single text block you can highlight and copy directly into Cursor — no formatting breaks, no markdown, just clean text:

⸻

You are a senior front-end engineer. Fix the issue where clicking one block selects all of them on the map. The app uses Mapbox GL JS. I need per-feature selection where each block toggles independently, persists through zoom and pan, and restores after data reloads. Keep existing data flow intact and only fix selection logic and styling. Refactor the block selection system to use Mapbox feature-state instead of changing the entire GeoJSON or using a shared property. Promote unique feature IDs by adding this: map.addSource(“blocks”, { type: “geojson”, data: blocksGeoJson, promoteId: “block_id” }); Style using feature-state: map.addLayer({ id: “blocks-fill”, type: “fill”, source: “blocks”, paint: { “fill-color”: [“case”, [“boolean”, [“feature-state”, “selected”], false], “rgba(61,139,255,0.35)”, “rgba(0,0,0,0.08)”], “fill-outline-color”: [“case”, [“boolean”, [“feature-state”, “selected”], false], “#3D8BFF”, “#BBBBBB”] } }); Maintain a Set of selected IDs: const selectedIds = new Set(); function toggleFeature(fid) { const selected = selectedIds.has(fid); if (selected) { selectedIds.delete(fid); } else { selectedIds.add(fid); } map.setFeatureState({ source: “blocks”, id: fid }, { selected: !selected }); } Add a click handler: map.on(“click”, “blocks-fill”, (e) => { const f = e.features && e.features[0]; if (!f) return; const fid = String(f.id ?? f.properties?.block_id ?? f.properties?.GEOID); toggleFeature(fid); }); Restore feature-state after data updates: function reapplySelection() { for (const fid of selectedIds) { map.setFeatureState({ source: “blocks”, id: fid }, { selected: true }); } } const src = map.getSource(“blocks”); src.setData(newData); reapplySelection(); Optional UX polish: map.on(“mousemove”, “blocks-fill”, (e) => { map.getCanvas().style.cursor = e.features?.length ? “pointer” : “”; }); Acceptance criteria: Clicking one block toggles only that block’s selection, selection updates immediately, selections persist after data reloads, and no performance lag occurs. Apply these fixes now and commit as “fix: per-feature block selection with Mapbox feature-state for Blocks NYC.”